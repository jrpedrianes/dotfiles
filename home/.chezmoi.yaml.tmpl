{{- $name := "Jorge Rodríguez Pedrianes" -}}
{{- $email := "jrpedrianes@gmail.com" -}}

{{- $chezmoiForce := or (has "--force" .chezmoi.args) (has "--force=true" .chezmoi.args) -}}
{{- $interactive := and stdinIsATTY (not $chezmoiForce) -}}

{{- if hasKey . "name" -}}
{{-   $name = .name -}}
{{- end -}}
{{- if $interactive -}}
{{-   range $i := until 99 -}}
{{-     $question := "❔ What is your full name" -}}
{{-     $answer := "" -}}
{{-     if $name -}}
{{-       $answer = promptString $question $name -}}
{{-     else -}}
{{-       $answer = promptString $question -}}
{{-     end -}}
{{-     if regexMatch "^[A-Z][-' a-zA-ZÁÉÍÓÚáéíóú]+$" $answer -}}
{{-       $name = $answer -}}
{{-       writeToStdout (printf "✅ Name set as '%s'\n" $name) -}}
{{-       break -}}
{{-     end -}}
{{-     writeToStdout (printf "❌ '%s' is an invalid name\n" $answer) -}}
{{-     if eq $i 98 -}}
{{-       writeToStdout "❌ ERROR: maximum tries exceeded\n" -}}
{{-       exit 1 -}}
{{-     end -}}
{{-   end -}}
{{- end -}}

{{- if hasKey . "email" -}}
{{-   $email = .email -}}
{{- end -}}
{{- if $interactive -}}
{{-   range $i := until 99 -}}
{{-     $question := "❔ What is your email" -}}
{{-     $answer := "" -}}
{{-     if $email -}}
{{-       $answer = promptString $question $email -}}
{{-     else -}}
{{-       $answer = promptString $question -}}
{{-     end -}}
{{-     $answer = lower $answer -}}
{{-     if regexMatch "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$" $answer -}}
{{-       $email = $answer -}}
{{-       writeToStdout (printf "✅ Email set as '%s'\n" $email) -}}
{{-       break -}}
{{-     end -}}
{{-     writeToStdout (printf "❌ '%s' is an invalid email\n" $answer) -}}
{{-     if eq $i 98 -}}
{{-       writeToStdout "❌ ERROR: maximum tries exceeded\n" -}}
{{-       exit 1 -}}
{{-     end -}}
{{-   end -}}
{{- end -}}

verbose: true

pager: ""

{{/* Here we "export" the variables, so we can access them outside this file */ -}}
data:
  name: "{{ $name }}"
  email: "{{ $email }}"
